<script src="/static/admin/js/pusher.min.js"></script>
<script>
  let pusher = new Pusher("{{.PreferenceMap["pusher-key"]}}", {
    authEndPoint: "/pusher/auth",
    wsHost: "localhost",
    wsPort: 4001,
    forceTLS: false,
    enableTransports: ["ws", "wss"],
    disableTransports: []
  });

  let publicChannel = pusher.subscribe("public-channel");
  publicChannel.bind("AppStarting", function(data) {
    successAlert(data.message);
  });
  publicChannel.bind("AppStopping", function(data) {
    warningAlert(data.message);
  });
  publicChannel.bind("HostServiceStatusChanged", function(data) {
    if (data.stale_status != data.new_status) {
      attention.toast({
        msg: data.message,
        icon: "info",
        timer: 30000,
        showCloseButton: true,
      });
    }
  });
  publicChannel.bind("HostServiceCountChanged", function(data) {
    // Use this variable to check if we are on the dashboard page
    let healthyCountExists = !!document.getElementById("healthy_count");
    if (healthyCountExists) {
      document.getElementById("healthy_count").innerHTML = data.healthy_count;
      document.getElementById("warning_count").innerHTML = data.warning_count;
      document.getElementById("pending_count").innerHTML = data.pending_count;
      document.getElementById("problem_count").innerHTML = data.problem_count;
    }
  });

  // events we want to look for
  //   - service goes down
  //   - service goes up
  //   - service status change
  //   - schedule change
  //   - monitoring is turned off
  //   - when next run event is triggered

  let attention = Prompt();

  {{if .Flash != ""}}
    successAlert('{{.Flash}}')
  {{end}}

  {{if .Warning != ""}}
    warningAlert('{{.Warning}}')
  {{end}}

  {{if .Error != ""}}
    errorAlert('{{.Error}}')
  {{end}}

  document.addEventListener("DOMContentLoaded", function () {
    let tabMap = new Map();
    let tabs = document.querySelectorAll('[data-toggle="tab"]');
    let i = 0;
    Array.prototype.filter.call(tabs, function (el) {
        el.addEventListener("click", function () {
            history.pushState("", document.title, window.location.pathname);
            localStorage.setItem('activeTab', el.getAttribute("data-target"));
        })

        tabMap.set(el.getAttribute("href"), i);
        i++;
    });

    if (!window.location.hash) {
        let activeTab = localStorage.getItem('activeTab');
        if (activeTab) {
            document.querySelectorAll('[data-toggle="tab"]')[activeTab].Tab.show()
        }
    } else {
        if (tabMap.has(window.location.hash)) {
            document.querySelectorAll('[data-toggle="tab"]')[tabMap.get(window.location.hash)].Tab.show()
        }
    }

    let monitoringToggle = document.getElementById("monitoring-live");
    monitoringToggle.addEventListener("change", function() {
      let enabled = monitoringToggle.checked;
      if (!enabled) {
        attention.confirm({
          html: "This will stop monitoring of all hosts and services. Are you sure?",
          callback: function(result) {
            if (result) {
              console.log("want to turn monitoring off");
              updateSystemPref("monitoring_live", "0");
              toggleMonitoring(0);
            } else {
              monitoringToggle.checked = true;
            }
          }
        });
      } else {
        updateSystemPref("monitoring_live", "1");
        toggleMonitoring(1);
      }
    });
  });

  function updateSystemPref(prefName, prefValue) {
    let formData = new FormData();
    formData.append("pref_name", prefName);
    formData.append("pref_value", prefValue);
    formData.append("csrf_token", "{{.CSRFToken}}");
    let ajax = new XMLHttpRequest();
    ajax.responseType = "json";
    ajax.open("POST", "/admin/preference/ajax/set-system-pref");
    ajax.send(formData);
    ajax.onreadystatechange = function() {
      // ready state changes to 4 when the ajax request has completed and a response has been received back from the server
      if (ajax.readyState === 4) {
        let resp = ajax.response;
        if (!resp.ok) {
          errorAlert("Error : " + resp.message);
        }
      }
    }
  }

  function toggleMonitoring(enabled) {
    let formData = new FormData();
    formData.append("enabled", enabled);
    formData.append("csrf_token", "{{.CSRFToken}}");
    let ajax = new XMLHttpRequest();
    ajax.responseType = "json";
    ajax.open("POST", "/admin/preference/ajax/toggle-monitoring");
    ajax.send(formData);
    ajax.onreadystatechange = function() {
      // ready state changes to 4 when the ajax request has completed and a response has been received back from the server
      if (ajax.readyState === 4) {
        let resp = ajax.response;
        if (!resp.ok) {
          errorAlert("Error : " + resp.message);
        }
      }
    }
  }
</script>
