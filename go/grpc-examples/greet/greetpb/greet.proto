syntax = "proto3";

package greet;
option go_package="greet/greetpb"; // This will impact code generation

message Greeting {
  string first_name = 1;
  string last_name = 2;
}

message GreetRequest {
  Greeting greeting = 1;
}

message GreetResponse {
  string result = 1;
}

message GreetManyTimesRequest {
  Greeting greeting = 1;
}

message GreetManyTimesResponse {
  string result = 1;
}

message LongGreetRequest {
  Greeting greeting = 1;
};

message LongGreetResponse {
  string result = 1;
};

message GreetEveryoneRequest {
  Greeting greeting = 1;
}

message GreetEveryoneResponse {
  string result = 1;
}

message GreetWithDeadlineRequest {
  Greeting greeting = 1;
}

message GreetWithDeadlineResponse {
  string result = 1;
}

service GreetService{
  // Unary API
  rpc Greet(GreetRequest) returns (GreetResponse) {};

  // Server Streaming RPC
  rpc GreetManyTimes(GreetManyTimesRequest) returns (stream GreetManyTimesResponse) {};

  // Client streaming
  rpc LongGreet(stream LongGreetRequest) returns (LongGreetResponse) {};

  // Bi-directional streaming
  rpc GreetEveryone(stream GreetEveryoneRequest) returns (stream GreetEveryoneResponse) {};

  // Unary API with deadline
  rpc GreetWithDeadline(GreetWithDeadlineRequest) returns (GreetWithDeadlineResponse) {};
}
