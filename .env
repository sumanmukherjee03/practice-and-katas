python_version_file="$(find . -maxdepth 3 -type f -name '.python-version')"
if [[ -n "$python_version_file" ]]; then
  python_version="$(head -n 1 "$python_version_file")"
  eval "$(pyenv init -)"
  eval "$(pyenv virtualenv-init -)"
  pyenv versions | grep "$python_version" || pyenv install
  pyenv local
  pyenv rehash
  pipenv_lock_file="$(find . -maxdepth 3 -type f -name 'Pipfile.lock')"
  if [[ -n "$pipenv_lock_file" ]]; then
    pipenv --python "$HOME/.pyenv/versions/$python_version/bin/python"
    pipenv --bare sync
  fi
fi

nvmrc_file="$(find . -maxdepth 3 -type f -name '.nvmrc')"
if [[ -n "$nvmrc_file" ]]; then
  node_version="$(head -n 1 "$nvmrc_file")"
  if [[ ! -d "$HOME/.nvm/versions/node/$node_version" ]]; then
    nvm install
  fi
  nvm use >/dev/null
fi

golang_version_file="$(find . -maxdepth 3 -type f -name '.go-version')"
if [[ -n "$golang_version_file" ]]; then
  golang_version="$(head -n 1 "$golang_version_file")"
  goenv versions | grep -i "$golang_version" >/dev/null 2>&1 || goenv install
  goenv rehash >/dev/null
fi

java_version_file="$(find . -maxdepth 3 -type f -name '.java-version')"
if [[ -n "$java_version_file" ]]; then
  jenv shell "$(head -n 1 "$java_version_file")"
  jenv rehash
fi
